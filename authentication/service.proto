syntax = "proto3";

option go_package = "github.com/fabianrwx/goarchive-proto/golang/authentication";

import "google/protobuf/empty.proto";

message PingAuthResponse {
    string message = 1;
}

// Authentication service definition
service AuthenticationService {
    rpc PingAuthentication(google.protobuf.Empty) returns (PingAuthResponse);
    // Validate token
    rpc GetClaims(GetClaimsRequest) returns (GetClaimsResponse) {}

    // Login with credentials
    rpc Login(LoginRequest) returns (LoginResponse) {}

    // Logout
    rpc Logout(LogoutRequest) returns (LogoutResponse) {}

    // Refresh token
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}



}

// Login Request
message LoginRequest {
  string username = 1;
  string password = 2;
  AuthType auth_type = 3;
}

// Login Response
message LoginResponse {
  string username = 1;
  string access_token = 2;
  string refresh_token = 3;
  string token_expiry = 4;
  string refresh_expiry = 5;
  repeated string roles = 6;
}

// Logout Request
message LogoutRequest {
  string token = 1;
}

// Logout Response
message LogoutResponse {
  bool success = 1;
}

// Auth Type
enum AuthType {
  IN_MEMORY = 0;
  LDAP = 1;
}

// User
message User {
  string username = 1;
  string password = 2;
  repeated string roles = 3;
}

// LDAP Config
message LDAPConfig {
  string url = 1;
  string base_dn = 2;
  string bind_dn = 3;
  string bind_password = 4;
}

// Refresh Token Request
message RefreshTokenRequest {
    string refresh_token = 1;
}
  
  // Refresh Token Response
message RefreshTokenResponse {
    string access_token = 1;
    string refresh_token = 2;
    string token_expiry = 3;
    string refresh_expiry = 4;
}

// Request to retrieve claims from token
message GetClaimsRequest {
  string token = 1;
}

// Response containing user claims
message GetClaimsResponse {
  string user_guid = 1;
  string username = 2;
  repeated string roles = 3;
}

message Group {
  string id = 1;
  string name = 2;
  bool administrator = 3;
  bool audit = 4;
  bool developer = 5;
  bool it_administrator = 6;
  bool end_user = 7;
  bool retention = 8;
  bool is_inmemory = 9;
  bool is_active = 10;
}

message ListGroupsResponse {
  repeated Group groups = 1;
}
