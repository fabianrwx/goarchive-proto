name: Protocol Buffer Go Stubs Generator

"on":
  push:
    tags:
    - '**/v*.*.*'

jobs:
  protoc:
    name: Generate
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: "1.22"
      
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract Release Version
      id: extract_version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        SERVICE_NAME=$(echo $TAG_NAME | cut -d'/' -f2)
        VERSION=$(echo $TAG_NAME | cut -d'/' -f3)
        echo "SERVICE_NAME=${SERVICE_NAME}" >> $GITHUB_ENV
        echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Generate for Golang
      if: env.SERVICE_NAME == matrix.service
      run: |
        chmod +x "${GITHUB_WORKSPACE}/run.sh"
        ./run.sh ${{ env.SERVICE_NAME }} ${{ env.RELEASE_VERSION }}
      shell: bash



# name: Protocol Buffer Go Stubs Generator
# "on":
#   push:
#     tags:
#     - '**/v*.*.*'
# jobs:
#   protoc:
#     name: Generate
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         service:
#         - templates
#         - application
#         - audit
#         - authentication
#     steps:
#     - name: Install Go
#       uses: actions/setup-go@v2
#       with:
#         go-version: "1.22"
#     - name: ""
#       uses: actions/checkout@v2
#     - name: Extract Release Version
#       run: |
#         TAG_NAME=${GITHUB_REF#refs/tags/}
#         SERVICE_NAME=$(echo $TAG_NAME | cut -d'/' -f2)
#         VERSION=$(echo $TAG_NAME | cut -d'/' -f3)
#         echo "SERVICE_NAME=${SERVICE_NAME}" >> $GITHUB_ENV
#         echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
#     - name: Generate for Golang
#       run: |
#         chmod +x "${GITHUB_WORKSPACE}/run.sh"
#         ./run.sh ${{ matrix.service }} ${{ env.RELEASE_VERSION }}
#       shell: bash
